$date
  Mon Jun 19 17:51:48 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module registro_8b_tb $end
$var reg 8 ! a[7:0] $end
$var reg 1 " w $end
$var reg 1 # clk $end
$var reg 8 $ r[7:0] $end
$scope module r1 $end
$var reg 8 % a[7:0] $end
$var reg 1 & w $end
$var reg 1 ' clk $end
$var reg 8 ( r[7:0] $end
$scope module registro1 $end
$var reg 1 ) d $end
$var reg 1 * w $end
$var reg 1 + clk $end
$var reg 1 , q $end
$upscope $end
$scope module registro2 $end
$var reg 1 - d $end
$var reg 1 . w $end
$var reg 1 / clk $end
$var reg 1 0 q $end
$upscope $end
$scope module registro3 $end
$var reg 1 1 d $end
$var reg 1 2 w $end
$var reg 1 3 clk $end
$var reg 1 4 q $end
$upscope $end
$scope module registro4 $end
$var reg 1 5 d $end
$var reg 1 6 w $end
$var reg 1 7 clk $end
$var reg 1 8 q $end
$upscope $end
$scope module registro5 $end
$var reg 1 9 d $end
$var reg 1 : w $end
$var reg 1 ; clk $end
$var reg 1 < q $end
$upscope $end
$scope module registro6 $end
$var reg 1 = d $end
$var reg 1 > w $end
$var reg 1 ? clk $end
$var reg 1 @ q $end
$upscope $end
$scope module registro7 $end
$var reg 1 A d $end
$var reg 1 B w $end
$var reg 1 C clk $end
$var reg 1 D q $end
$upscope $end
$scope module registro8 $end
$var reg 1 E d $end
$var reg 1 F w $end
$var reg 1 G clk $end
$var reg 1 H q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b10101010 !
1"
U#
bUUUUUUUU $
b10101010 %
1&
U'
bUUUUUUUU (
0)
1*
U+
U,
1-
1.
U/
U0
01
12
U3
U4
15
16
U7
U8
09
1:
U;
U<
1=
1>
U?
U@
0A
1B
UC
UD
1E
1F
UG
UH
#1000000
0#
0'
0+
0/
03
07
0;
0?
0C
0G
#3000000
1#
b10101010 $
1'
b10101010 (
1+
0,
1/
10
13
04
17
18
1;
0<
1?
1@
1C
0D
1G
1H
#5000000
b10011000 !
b10011000 %
0-
19
0=
#6000000
0#
0'
0+
0/
03
07
0;
0?
0C
0G
#8000000
1#
b10011000 $
1'
b10011000 (
1+
1/
00
13
17
1;
1<
1?
0@
1C
1G
#10000000
